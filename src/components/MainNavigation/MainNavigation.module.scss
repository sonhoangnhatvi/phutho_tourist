@import url("https://fonts.googleapis.com/css?family=Open+Sans:400,700"); // Import Google Font
@import url("https://fonts.googleapis.com/css2?family=Philosopher&display=swap");
// Global styles (no need for curly braces for single-line selectors)
* {
  box-sizing: border-box;
}

body {
  padding: 0;
  margin: 0;
  font-family: "Open Sans", sans-serif;
}

main {
  padding: 1rem;
  margin: auto;
}

// Component styles with nesting and variables
$main-color: #00695c; // Define reusable color variable

$nav-bar-color: #0f3a6b;

$nav-bar-tex-color: #99ffff;

.main_header {
  width: 100%;
  background-color: $nav-bar-color; // Use variable
  padding: 0 1.5rem;

  .main_header_nav {
    height: 100%;
  }

  .main_header_item_list {
    list-style: none;
    margin: 0;
    padding: 12px;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .main_header_item {
    margin: 0 1rem;
    padding: 0;
  }

  .main_header_item a {
    text-decoration: none;
    color: #ffffff;
    font-family: Philosopher;
    font-size: 20px;
    font-weight: 700;
    line-height: 22.4px;
    text-align: center;
  }

  .main_header_item a:hover,
  .main_header_item a.active {
    color: #ffeb3b;
  }
}

// Continue converting remaining styles using nesting and consider using variables for reusable values
.grid {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
  align-items: stretch;
}

.card {
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);
}

.card__header,
.card__content {
  padding: 1rem;
}

.card__header h1,
.card__content h1,
.card__content h2,
.card__content p {
  margin: 0;
}

.card__image {
  width: 100%;
}

.card__image img {
  width: 100%;
}

.card__actions {
  padding: 1rem;
  text-align: center;
}

.card__actions button,
.card__actions a {
  margin: 0 0.25rem;
}

.btn {
  font: inherit;
  border: 1px solid $main-color; // Use variable
  color: $main-color; // Use variable
  background: white;
  border-radius: 3px;
  cursor: pointer;
}

.btn:hover,
.btn:active {
  background-color: $main-color; // Use variable
  color: white;
}
